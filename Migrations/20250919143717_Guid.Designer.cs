// <auto-generated />
using System;
using ChemGa.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ChemGa.Migrations
{
    [DbContext(typeof(AppDatabase))]
    [Migration("20250919143717_Guid")]
    partial class Guid
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ChemGa.Database.Models.Giveaway", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("_id");

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("channel_id");

                    b.Property<DateTime>("EndAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("end_at");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("guild_id");

                    b.Property<decimal>("HostId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("host_id");

                    b.Property<bool>("IsEnded")
                        .HasColumnType("boolean")
                        .HasColumnName("ended");

                    b.Property<decimal>("MessageId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("message_id");

                    b.PrimitiveCollection<decimal[]>("ParticipantIds")
                        .IsRequired()
                        .HasColumnType("numeric(20,0)[]")
                        .HasColumnName("participants");

                    b.Property<string>("Prize")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("prize");

                    b.PrimitiveCollection<decimal[]>("RoleRequirements")
                        .IsRequired()
                        .HasColumnType("numeric(20,0)[]")
                        .HasColumnName("roles_required");

                    b.PrimitiveCollection<decimal[]>("RoleRestrictions")
                        .IsRequired()
                        .HasColumnType("numeric(20,0)[]")
                        .HasColumnName("roles_restrict");

                    b.Property<DateTime>("StartAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("start_at");

                    b.Property<int>("WinnerCount")
                        .HasColumnType("integer")
                        .HasColumnName("winner_cnt");

                    b.PrimitiveCollection<decimal[]>("WinnerIds")
                        .IsRequired()
                        .HasColumnType("numeric(20,0)[]")
                        .HasColumnName("winners");

                    b.HasKey("Id");

                    b.HasIndex("MessageId")
                        .IsUnique();

                    b.HasIndex("EndAt", "IsEnded", "GuildId")
                        .IsDescending();

                    b.ToTable("giveaway");
                });

            modelBuilder.Entity("ChemGa.Database.Models.Utility.GlobalBypass", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("globalbypass");
                });
#pragma warning restore 612, 618
        }
    }
}
